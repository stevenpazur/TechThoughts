{"version":3,"sources":["components/ThoughtList/ThoughtList.js","utils/mutations.js","utils/queries.js","components/ThoughtForm/ThoughtForm.js","pages/Home.js","components/CommentList/CommentList.js","components/CommentForm/CommentForm.js","pages/SingleThought.js","components/Header/Header.js","components/Footer/Footer.js","components/Login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["ThoughtList","thoughts","title","length","map","thought","className","thoughtAuthor","style","fontSize","createdAt","thoughtText","to","_id","ADD_THOUGHT","gql","ADD_COMMENT","QUERY_THOUGHTS","QUERY_SINGLE_THOUGHT","ThoughtForm","useState","formState","setFormState","characterCount","setCharacterCount","useMutation","update","cache","addThought","data","readQuery","query","writeQuery","e","console","error","handleFormSubmit","event","a","preventDefault","variables","handleChange","target","name","value","onSubmit","placeholder","lineHeight","onChange","type","Home","useQuery","loading","border","CommentList","comments","log","borderBottom","comment","commentText","CommentForm","thoughtId","setCommentText","addComment","SingleThought","useParams","fontStyle","Header","Footer","location","useLocation","navigate","useNavigate","pathname","onClick","role","Login","client","ApolloClient","uri","InMemoryCache","App","ApolloProvider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54e5a15d.chunk.js","sourcesContent":["import React from 'react';\r\n// Import `<Link>` component from React Router for internal hyperlinks\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ThoughtList = ({ thoughts, title }) => {\r\n  if (!thoughts.length) {\r\n    return <h3>No Thoughts Yet</h3>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>{title}</h3>\r\n      {thoughts &&\r\n        thoughts.map((thought) => (\r\n          <div key={thought._id} className=\"card mb-3\">\r\n            <h4 className=\"card-header bg-info text-light p-2 m-0\">\r\n              {thought.thoughtAuthor} <br />\r\n              <span style={{ fontSize: '1rem' }}>\r\n                had this thought on {thought.createdAt}\r\n              </span>\r\n            </h4>\r\n            <div className=\"card-body bg-light p-2\">\r\n              <p>{thought.thoughtText}</p>\r\n            </div>\r\n            <Link\r\n              className=\"btn btn-info btn-block btn-squared\"\r\n              to={`/thoughts/${thought._id}`}\r\n            >\r\n              Join the discussion on this thought.\r\n            </Link>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThoughtList;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const ADD_THOUGHT = gql`\r\n  mutation addThought($thoughtText: String!, $thoughtAuthor: String!) {\r\n    addThought(thoughtText: $thoughtText, thoughtAuthor: $thoughtAuthor) {\r\n      _id\r\n      thoughtText\r\n      thoughtAuthor\r\n      createdAt\r\n      comments {\r\n        _id\r\n        commentText\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_COMMENT = gql`\r\n  mutation addComment($thoughtId: ID!, $commentText: String!) {\r\n    addComment(thoughtId: $thoughtId, commentText: $commentText) {\r\n      _id\r\n      thoughtText\r\n      thoughtAuthor\r\n      createdAt\r\n      comments {\r\n        _id\r\n        commentText\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_THOUGHTS = gql`\r\n  query getThoughts {\r\n    thoughts {\r\n      _id\r\n      thoughtText\r\n      thoughtAuthor\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_SINGLE_THOUGHT = gql`\r\n  query getSingleThought($thoughtId: ID!) {\r\n    thought(thoughtId: $thoughtId) {\r\n      _id\r\n      thoughtText\r\n      thoughtAuthor\r\n      createdAt\r\n      comments {\r\n        _id\r\n        commentText\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_THOUGHT } from '../../utils/mutations';\r\nimport { QUERY_THOUGHTS } from '../../utils/queries';\r\n\r\nconst ThoughtForm = () => {\r\n  const [formState, setFormState] = useState({\r\n    thoughtText: '',\r\n    thoughtAuthor: '',\r\n  });\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\r\n    update(cache, { data: { addThought } }) {\r\n      try {\r\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_THOUGHTS,\r\n          data: { thoughts: [addThought, ...thoughts] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addThought({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      setFormState({\r\n        thoughtText: '',\r\n        thoughtAuthor: '',\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'thoughtText' && value.length <= 280) {\r\n      setFormState({ ...formState, [name]: value });\r\n      setCharacterCount(value.length);\r\n    } else if (name !== 'thoughtText') {\r\n      setFormState({ ...formState, [name]: value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>What's on your techy mind?</h3>\r\n\r\n      <p\r\n        className={`m-0 ${\r\n          characterCount === 280 || error ? 'text-danger' : ''\r\n        }`}\r\n      >\r\n        Character Count: {characterCount}/280\r\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\r\n      </p>\r\n      <form\r\n        className=\"flex-row justify-center justify-space-between-md align-center\"\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        <div className=\"col-12\">\r\n          <textarea\r\n            name=\"thoughtText\"\r\n            placeholder=\"Here's a new thought...\"\r\n            value={formState.thoughtText}\r\n            className=\"form-input w-100\"\r\n            style={{ lineHeight: '1.5' }}\r\n            onChange={handleChange}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"col-12 col-lg-9\">\r\n          <input\r\n            name=\"thoughtAuthor\"\r\n            placeholder=\"Add your name to get credit for the thought...\"\r\n            value={formState.thoughtAuthor}\r\n            className=\"form-input w-100\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-lg-3\">\r\n          <button className=\"btn btn-info btn-block py-3\" type=\"submit\">\r\n            Add Thought\r\n          </button>\r\n        </div>\r\n        {error && (\r\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n            Something went wrong...\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThoughtForm;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport ThoughtList from '../components/ThoughtList/ThoughtList';\r\nimport ThoughtForm from '../components/ThoughtForm/ThoughtForm';\r\n\r\nimport { QUERY_THOUGHTS } from '../utils/queries';\r\n\r\nconst Home = () => {\r\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\r\n  const thoughts = data?.thoughts || [];\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"flex-row justify-center\">\r\n        <div\r\n          className=\"col-12 col-md-10 mb-3 p-3\"\r\n          style={{ border: '1px dotted #1a1a1a' }}\r\n        >\r\n          <ThoughtForm />\r\n        </div>\r\n        <div className=\"col-12 col-md-8 mb-3\">\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <ThoughtList\r\n              thoughts={thoughts}\r\n              title=\"Some Feed for Thought(s)...\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst CommentList = ({ comments = [] }) => {\r\n  console.log(comments);\r\n  if (!comments.length) {\r\n    return <h3>No Comments Yet</h3>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3\r\n        className=\"p-5 display-inline-block\"\r\n        style={{ borderBottom: '1px dotted #1a1a1a' }}\r\n      >\r\n        Comments\r\n      </h3>\r\n      <div className=\"flex-row my-4\">\r\n        {comments &&\r\n          comments.map((comment) => (\r\n            <div key={comment._id} className=\"col-12 mb-3 pb-3\">\r\n              <div className=\"p-3 bg-dark text-light\">\r\n                <h5 className=\"card-header\">\r\n                  An anonymous user commented{' '}\r\n                  <span style={{ fontSize: '0.825rem' }}>\r\n                    on {comment.createdAt}\r\n                  </span>\r\n                </h5>\r\n                <p className=\"card-body\">{comment.commentText}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_COMMENT } from '../../utils/mutations';\r\n\r\nconst CommentForm = ({ thoughtId }) => {\r\n  const [commentText, setCommentText] = useState('');\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addComment({\r\n        variables: { thoughtId, commentText },\r\n      });\r\n\r\n      setCommentText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'commentText' && value.length <= 280) {\r\n      setCommentText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>What are your thoughts on this thought?</h4>\r\n      <p\r\n        className={`m-0 ${\r\n          characterCount === 280 || error ? 'text-danger' : ''\r\n        }`}\r\n      >\r\n        Character Count: {characterCount}/280\r\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\r\n      </p>\r\n      <form\r\n        className=\"flex-row justify-center justify-space-between-md align-center\"\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        <div className=\"col-12 col-lg-9\">\r\n          <textarea\r\n            name=\"commentText\"\r\n            placeholder=\"Add your comment...\"\r\n            value={commentText}\r\n            className=\"form-input w-100\"\r\n            style={{ lineHeight: '1.5' }}\r\n            onChange={handleChange}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"col-12 col-lg-3\">\r\n          <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n            Add Comment\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import React from 'react';\r\n\r\n// Import the `useParams()` hook from React Router\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport CommentList from '../components/CommentList/CommentList';\r\n\r\nimport { QUERY_SINGLE_THOUGHT } from '../utils/queries';\r\nimport CommentForm from '../components/CommentForm/CommentForm';\r\n\r\nconst SingleThought = () => {\r\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\r\n  const { thoughtId } = useParams();\r\n\r\n  const { loading, data } = useQuery(QUERY_SINGLE_THOUGHT, {\r\n    // Pass the `thoughtId` URL parameter into query to retrieve this thought's data\r\n    variables: { thoughtId: thoughtId },\r\n  });\r\n\r\n  const thought = data?.thought || {};\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className=\"my-3\">\r\n      <h3 className=\"card-header bg-dark text-light p-2 m-0\">\r\n        {thought.thoughtAuthor} <br />\r\n        <span style={{ fontSize: '1rem' }}>\r\n          had this thought on {thought.createdAt}\r\n        </span>\r\n      </h3>\r\n      <div className=\"bg-light py-4\">\r\n        <blockquote\r\n          className=\"p-4\"\r\n          style={{\r\n            fontSize: '1.5rem',\r\n            fontStyle: 'italic',\r\n            border: '2px dotted #1a1a1a',\r\n            lineHeight: '1.5',\r\n          }}\r\n        >\r\n          {thought.thoughtText}\r\n        </blockquote>\r\n      </div>\r\n\r\n      <div className=\"my-5\">\r\n        <CommentList comments={thought.comments} />\r\n      </div>\r\n      <div className=\"m-3 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\r\n        <CommentForm thoughtId={thought._id} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleThought;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"bg-info text-light mb-4 py-3 flex-row align-center\">\r\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\r\n        <Link className=\"text-light\" to=\"/\">\r\n          <h1 className=\"m-0\">Tech Thoughts</h1>\r\n        </Link>\r\n        <p className=\"m-0\">Made by Steven Pazur</p>\r\n        {/* <Link className=\"text-light bg-danger p-2\" style={{ borderRadius : 10, lineHeight : 10, padding: 20 }} to=\"/Loginpage\">\r\n          <h4 className=\"m-0\">Log In</h4>\r\n        </Link> */}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n        <h4>\r\n          Made with{' '}\r\n          <span\r\n            className=\"emoji\"\r\n            role=\"img\"\r\n            aria-label=\"heart\"\r\n            aria-hidden=\"false\"\r\n          >\r\n            ❤️\r\n          </span>{' '}\r\n          by the Tech Thoughts team.\r\n        </h4>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div>\r\n      <h3>Hacking into the mainframe...</h3>\r\n\r\n      <form\r\n        className=\"flex-row justify-center justify-space-between-md align-center\"\r\n      >\r\n        <div className=\"col-12\">\r\n          <input\r\n            name=\"thoughtText\"\r\n            placeholder=\"Username\"\r\n            className=\"form-input w-100\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <input\r\n            name=\"thoughtAuthor\"\r\n            placeholder=\"Password\"\r\n            className=\"form-input w-100\"\r\n            type=\"password\"\r\n          />\r\n        </div>\r\n        <div className=\"w-20 mx-auto\">\r\n          <Link to=\"/\">\r\n            <h4 className=\"m-0\">Log In</h4>\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport SingleThought from './pages/SingleThought';\r\nimport Header from './components/Header/Header';\r\nimport Footer from './components/Footer/Footer';\r\nimport Login from './components/Login/Login';\r\n\r\nconst client = new ApolloClient({\r\n  uri: '/graphql',\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div className=\"flex-column justify-flex-start min-100-vh\">\r\n          <Header />\r\n          <div className=\"container\">\r\n            <Routes>\r\n              <Route \r\n                path=\"/\" \r\n                element={<Home />}\r\n              />\r\n              <Route \r\n                path=\"/thoughts/:thoughtId\" \r\n                element={<SingleThought />}\r\n              />\r\n              <Route\r\n                path=\"/Loginpage\"\r\n                element={<Login/>}\r\n              />\r\n            </Routes>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}